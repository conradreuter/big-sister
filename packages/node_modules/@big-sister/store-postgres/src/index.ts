import { Identifier, StorePlugin } from '@big-sister/types'
import * as Postgres from 'pg-promise'

/**
 * Stores presence information via Postgres.
 */
const plugin: StorePlugin<{}> = async (options) => {
  const database = Postgres()(options)
  const rowIds = new Map<Identifier, number>()
  return {
    async becomeAbsent(identifier, timestamp) {
      rowIds.delete(identifier)
    },
    async becomePresent(identifier, timestamp) {
      const result = await database.one(
        'INSERT INTO presence_intervals(identifier, interval_from, interval_to) VALUES(${identifier}, ${from}, ${to}) RETURNING row_id',
        {
          identifier,
          from: timestamp,
          to: timestamp,
        },
      )
      rowIds.set(identifier, result.row_id)
    },
    async stayPresent(identifier, timestamp) {
      await database.none(
        'UPDATE presence_intervals SET interval_to = ${to} WHERE row_id = ${rowId}',
        {
          rowId: rowIds.get(identifier),
          to: timestamp,
        },
      )
    },
  }
}

export default plugin
